name: 'Generate ADR TOC'
description: 'Generates the Table of Contents for ADRs'

inputs:
  adr-dir:
    description: 'Directory of the ADR'
    required: false
    default: ''
  adr-tool-repo:
    description: 'Repo to the ADR Tools. Must be HTTPS url'
    required: false
    default: 'https://github.com/npryce/adr-tools.git'
  adr-tool-version:
    description: 'Version from the ADR Tools Repo'
    required: false
    default: '3.0.0'
  github_token:
    description: 'GitHub token to use to commit to the repo'
    required: false
    default: '' 

runs:
  using: "composite"
  steps:
    - name: Clone ADR Tools
      shell: bash
      run: |
        DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
        echo "Cloning ADR tools to $DIR/adr-tools"
        git clone --depth 1 --branch ${{ inputs.adr-tool-version }} --single-branch ${{ inputs.adr-tool-repo }} "$DIR/adr-tools"

    - name: Install Graphviz
      shell: bash
      run: |
        if [[ "$OSTYPE" == "darwin"* ]]; then
          brew install graphviz
        else
          sudo apt-get install graphviz
        fi
        
    - name: Set ADR Dir Input
      id: adr-var
      shell: bash
      run: |
        ADR_DIR="${{ inputs.adr-dir }}"
        if [ -z "$ADR_DIR" ] && [ -f .adr-dir ]
        then
          ADR_DIR="$(cat .adr-dir)"
        else
          echo '.adr-dir file doesnt exist, and no adr-dir input was given into the action. Please define one'
          exit 1
        fi
        echo "Setting ADR DIR to $ADR_DIR"
        echo "::set-output name=ADR_DIR::$ADR_DIR"

    - name: Run ADR Tools
      shell: bash
      run: |
        DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
      
        echo "Changing directory to ${{ steps.adr-var.outputs.ADR_DIR }}"
        pushd ${{ steps.adr-var.outputs.ADR_DIR }}
        pwd
        ls -al

        # Generate Graph of ADRs
        echo "Generating Graph"
        "$DIR/adr-tools/src/adr" generate graph
        "$DIR/adr-tools/src/adr" generate graph | dot -Tpng > graph.png

        # Add content to README, including generated TOC
        echo "Generating Table of Contents"
        "$DIR/adr-tools/src/adr" generate toc
        echo "<!-- This file is autogenerated by actions, please don't modify it -->" > README.md
        "$DIR/adr-tools/src/adr" generate toc >> README.md
        echo -e '\n\n## Dependency Graph of ADRs\n\n![ADR Graph Dependency](graph.png)' >> README.md

        popd

    - name: Commit ADR TOC
      shell: bash
      run: |
        commit_message='Update ADR TOC'
        repo_auth="${{ github.actor }}:${{ inputs.github_token }}"
        repo_name="${{ github.repository }}"
        ref="${{ github.ref }}"
        adr_dir="${{ steps.adr-var.outputs.ADR_DIR }}/*"
        

        remote_repo="https://${repo_auth}@github.com/${repo_name}.git"

        echo "Committing : ${commit_message}"
        echo "Push ${adr_dir} to branch ${ref} in repo ${remote_repo}"
        echo "=================================="
        echo "Setting Config for Git"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        echo "=================================="

        if [ -z "$(git status --porcelain)" ]; then 
          echo "Nothing to commit, exiting"
          exit 0
        fi

        git add -f "${adr_dir}"
        git commit -m "${commit_message}"
        git push "${remote_repo}" "HEAD:${ref}" --follow-tags
